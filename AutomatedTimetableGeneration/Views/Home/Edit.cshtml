@model AutomatedTimetableGeneration.Models.AspNetUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMetronic.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        
                    @Html.HiddenFor(model => model.EmailConfirmed)
                    @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
        
       
                @Html.HiddenFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
   
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

      
                    @Html.HiddenFor(model => model.PhoneNumberConfirmed)
                    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
          
    
                    @Html.HiddenFor(model => model.TwoFactorEnabled)
                    @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
            
                @Html.HiddenFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
         

       
                    @Html.HiddenFor(model => model.LockoutEnabled)
                    @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
          
                @Html.HiddenFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
       
                @Html.HiddenFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Department_id, "Department_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Department_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Department_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-circle green" />
            </div>
        </div>
    </div>
}

<div>
    <span class="btn btn-circle-left grey "> @Html.ActionLink("Back to profile", "Profile1") </span>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
